General:
[x] - `Tensor` - immutable size.
[x] - `Tensor` - all values of the same type.
[x] - (n, m, o) shape: n - rows, m - columns, o - depth.
[x] - (n) vector is represented as a column: (n) shape.
[x] - () shape: scalar, rank = 0.
[x] - Tensor axis 0 is vertical, 1 - horizontal.
[x] - Tensor zero value behaves like a scalar set to 0.
[x] - Does not support broadcasting.

Forms:
[x] - `owner` - tensor that owns data buffer.
[x] - `view` - "pointer" to data owner Tensor or another view.

API (tensor):
 "tensor.go":
  [+] - type Tensor struct {...}
  [x] - tensor.New(shape ...int) *Tensor
  [ ] - tensor.NewScalar(v interface{}) *Tensor
 "delegate.go":
  [+] - type Delegate struct {...}
  [+] - tensor.NewDelegate(dst *Tensor) *Delegate
  [+] - (*Tensor) Delegate() *Delegate
  [ ] - (*Delegate) Comp(a, b *Tensor, comp func(a, b *Tensor) int) *Tensor
  [+] - (*Delegate) Add(a, b *Tensor) *Tensor
  [ ] - (*Delegate) Subtract(a, b *Tensor) *Tensor
  [ ] - (*Delegate) Multiply(a, b *Tensor) *Tensor
  [ ] - (*Delegate) Divide(a, b *Tensor) *Tensor
  [ ] - (*Delegate) Resize(t *Tensor, shape ...int) *Tensor
  [ ] - (*Delegate) Maximum(TODO) *Tensor
  [ ] - (*Delegate) Minimum(TODO) *Tensor
 "layout.go":
  [x] - (*Tensor) NDim() int
  [x] - (*Tensor) Shape() []int
  [x] - (*Tensor) Strides() []int
  [x] - (*Tensor) Size() int
  [x] - (*Tensor) Owner() bool
  [x] - (*Tensor) NBytes() int
  [x] - (*Tensor) Base() *Tensor
  [x] - (*Tensor) Data() []byte // (Test)
  [x] - (*Tensor) FillBuf(data interface{}) *Tensor
  [x] - (*Tensor) DType() dtype.DType
 "conv.go":
  [ ] - (*Tensor) Copy() *Tensor
  [ ] - (*Tensor) View() *Tensor
  [ ] - (*Tensor) AsType(dt DType) *Tensor
  [ ] - (*Tensor) Bool() bool
  [ ] - (*Tensor) Byte() byte
  [ ] - (*Tensor) Int() int
  [ ] - (*Tensor) Float() float64
  [ ] - (*Tensor) Cmplx() complex128
  [ ] - (*Tensor) String() string
  [ ] - (*Tensor) Object() interface{}
 "format.go":
  [ ] - var PrintElementsThreshold = 8
  [ ] - (*Tensor) String() string
 "fill.go":
  [ ] - (*Tensor) Zeros() *Tensor
  [ ] - (*Tensor) Ones() *Tensor
  [ ] - (*Tensor) Fill(v *Tensor) *Tensor
  [ ] - (*Tensor) Arange(start, step *Tensor) *Tensor
  [ ] - (*Tensor) Linspace(start, end *Tensor) *Tensor
  [ ] - (*Tensor) Eye() *Tensor
 "shape.go":
  [ ] - (*Tensor) T() *Tensor
  [ ] - (*Tensor) Transpose() *Tensor
  [ ] - (*Tensor) H() *Tensor
  [ ] - (*Tensor) Destruct() []*Tensor
  [ ] - (*Tensor) Split(dim int) []*Tensor
  [ ] - (*Tensor) Slice(dim, from int, to ...int) *Tensor
  [ ] - (*Tensor) Reshape(shape ...int) *Tensor
  [ ] - (*Tensor) Resize(shape ...int) *Tensor
  [ ] - (*Tensor) Ravel() *Tensor
 "element.go":
  [ ] - (*Tensor) Each(f func(pos []int, t *Tensor)) *Tensor
  [ ] - (*Tensor) ItemAt(idx ...int) *Tensor
  [ ] - (*Tensor) ItemSet(v *Tensor, idx ...int) *Tensor
 "arith.go":
  [ ] - (*Tensor) Add(u *Tensor) *Tensor
  [ ] - (*Tensor) Subtract(u *Tensor) *Tensor
  [ ] - (*Tensor) Multiply(u *Tensor) *Tensor
  [ ] - (*Tensor) Divide(u *Tensor) *Tensor
  [ ] - (*Tensor) Negative() *Tensor
  [ ] - (*Tensor) Mod(TODO) *Tensor
  [ ] - (*Tensor) FMod(TODO) *Tensor
 "logic.go":
  [ ] - (*Tensor) Comp(u *Tensor, comp func(a, b *Tensor) int) *Tensor
  [ ] - (*Tensor) SameAs(u *Tensor) bool
  [ ] - (*Tensor) Equal(TODO) *Tensor
  [ ] - (*Tensor) Less(TODO) *Tensor
  [ ] - (*Tensor) All() bool
  [ ] - (*Tensor) Any() bool
 "trigono.go":
  [ ] - (*Tensor) Sin() *Tensor
  [ ] - (*Tensor) Cos() *Tensor
  [ ] - (*Tensor) Tan() *Tensor
 "stat.go":
  [ ] - (*Tensor) Min() *Tensor
  [ ] - (*Tensor) Minimum() *Tensor
  [ ] - (*Tensor) Max() *Tensor
  [ ] - (*Tensor) Maximum *Tensor
  [ ] - (*Tensor) Mean() TODO
  [ ] - (*Tensor) Median() TODO
  [ ] - (*Tensor) Std() TODO
  [ ] - (*Tensor) CorrCoef() TODO
 "sort.go":
  [ ] - (*Tensor) Sort() TODO
 "random.go":
  [ ] - (*Tensor) Random() TODO
 "explog.go":
  [ ] - (*Tensor) Exp() *Tensor
  [ ] - (*Tensor) Power(v *Tensor) *Tensor
  [ ] - (*Tensor) Sqrt() *Tensor
  [ ] - (*Tensor) Log() *Tensor
  [ ] - (*Tensor) Log10() *Tensor
 "cmplx.go":
  [ ] - (*Tensor) Re() *Tensor
  [ ] - (*Tensor) Im() *Tensor
 linalg.go":
  [ ] - (*Tensor) Dot(u *Tensor) *Tensor
  [ ] - (*Tensor) Diag() *Tensor
  [ ] - (*Tensor) DiagFlat() *Tensor
  [ ] - (*Tensor) Trace() *Tensor
 "prodsum.go"
  [ ] - (*Tensor) Prod() *Tensor
  [ ] - (*Tensor) Sum() *Tensor
  [ ] - (*Tensor) CumSum() *Tensor

API (dtype):
 "dtype.go":
  [x] - type DType = core.DType
  [x] - const Bool = core.Bool
  [x] - const Int = core.Int
  [ ] - const Int8 = core.Int8
  [x] - const Int16 = core.Int16
  [ ] - const Int32 = core.Int32
  [x] - const Int64 = core.Int64
  [x] - const Uint = core.Uint
  [x] - const Uint8 = core.Uint8
  [x] - const Uint16 = core.Uint16
  [x] - const Uint32 = core.Uint32
  [x] - const Uint64 = core.Uint64
  [ ] - const Uintptr = core.Uintptr
  [x] - const Float32 = core.Float32
  [x] - const Float64 = core.Float64
  [x] - const Complex64 = core.Complex64
  [x] - const Complex128 = core.Complex128
  [x] - const String = core.String
  [ ] - const Object = core.Object

Planed features:
[ ] - txtfmt package: custom display options for I/O formatting.
[ ] - broadcasting.
[ ] - masks.
[ ] - custom fields.
[ ] - more flexible dtype.